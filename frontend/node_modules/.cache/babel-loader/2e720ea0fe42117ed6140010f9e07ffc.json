{"ast":null,"code":"var _jsxFileName = \"/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './Header';\nimport Form from './Form.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  // Стейты, в которых содержатся значения инпутов\n  const [data, setData] = useState({\n    email: props.data.email,\n    password: ''\n  }); //Обработчик изменения инпута обновляет стейт\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    if (!data.email || !data.password) {\n      return;\n    } // Передаём значения управляемых компонентов во внешний обработчик\n\n\n    props.onLogin(data.email, data.password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      buttonName: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      toLink: \"/sign-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup popup_auth popup_opened\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        type: \"auth\",\n        id: \"login\",\n        name: \"log_in\",\n        title: \"\\u0412\\u0445\\u043E\\u0434\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email\",\n          required: true,\n          className: \"popup__input popup__input_black\",\n          name: \"email\",\n          id: \"email\",\n          type: \"email\",\n          value: data.email || '',\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"email-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          required: true,\n          className: \"popup__input popup__input_black\",\n          name: \"password\",\n          id: \"password\",\n          type: \"password\",\n          value: data.password || '',\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"password-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"Q6yQcK5yGvoE5MkvKHbWdm82nhk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/Login.js"],"names":["useState","Header","Form","Login","props","data","setData","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","onLogin"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEpB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAEH,KAAK,CAACC,IAAN,CAAWE,KADa;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC,CAHoB,CAQnB;;AACD,QAAMC,YAAY,GAAIC,CAAD,IAAM;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAP,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACM,IAAD,GAAQC;AAFF,KAAD,CAAP;AAIA,GANF;;AAQA,QAAME,YAAY,GAAIJ,CAAD,IAAM;AACzB;AACAA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAI,CAACV,IAAI,CAACE,KAAN,IAAe,CAACF,IAAI,CAACG,QAAzB,EAAkC;AAChC;AACD,KANwB,CAOzB;;;AACAJ,IAAAA,KAAK,CAACY,OAAN,CAAcX,IAAI,CAACE,KAAnB,EAA0BF,IAAI,CAACG,QAA/B;AACD,GATD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAC,oEAAnB;AAAiC,MAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAG,QAHT;AAIE,QAAA,KAAK,EAAG,0BAJV;AAKE,QAAA,QAAQ,EAAIM,YALd;AAAA,gCAOI;AAAO,UAAA,WAAW,EAAC,OAAnB;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,SAAS,EAAC,iCAFZ;AAGE,UAAA,IAAI,EAAG,OAHT;AAIE,UAAA,EAAE,EAAC,OAJL;AAKE,UAAA,IAAI,EAAG,OALT;AAME,UAAA,KAAK,EAAET,IAAI,CAACE,KAAL,IAAa,EANtB;AAOE,UAAA,QAAQ,EAAEE;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAgBI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAiBI;AACE,UAAA,WAAW,EAAC,sCADd;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,SAAS,EAAC,iCAHZ;AAIE,UAAA,IAAI,EAAG,UAJT;AAKE,UAAA,EAAE,EAAC,UALL;AAME,UAAA,IAAI,EAAC,UANP;AAOE,UAAA,KAAK,EAAEJ,IAAI,CAACG,QAAL,IAAiB,EAP1B;AAQE,UAAA,QAAQ,EAAEC;AARZ;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eA0BI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAhEQN,K;;KAAAA,K;AAiET,eAAeA,KAAf","sourcesContent":["import {useState} from 'react';\nimport Header from './Header';\nimport Form from './Form.js';\n\n\nfunction Login(props) {\n\n  // Стейты, в которых содержатся значения инпутов\n  const [data, setData] = useState({\n    email: props.data.email,\n    password: '',\n  });\n\n   //Обработчик изменения инпута обновляет стейт\n  const handleChange = (e) =>{\n    const {name, value} = e.target;\n    setData({\n      ...data,\n      [name]: value\n    })\n   }\n\n  const handleSubmit = (e) =>{\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    if (!data.email || !data.password){\n      return\n    }\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onLogin(data.email, data.password);\n  }\n\n\n  return(\n    <div className=\"page\">\n      <Header buttonName=\"Регистрация\" toLink=\"/sign-up\"/>\n      <div className=\"popup popup_auth popup_opened\">\n        <Form\n          type=\"auth\"\n          id=\"login\"\n          name = \"log_in\"\n          title = \"Вход\"\n          onSubmit = {handleSubmit}\n          >\n            <input placeholder=\"Email\"\n              required\n              className=\"popup__input popup__input_black\"\n              name = \"email\"\n              id=\"email\"\n              type = \"email\"\n              value={data.email|| ''}\n              onChange={handleChange}\n            />\n            <span className=\"popup__error\" id=\"email-error\"/>\n            <input\n              placeholder=\"Пароль\"\n              required\n              className=\"popup__input popup__input_black\"\n              name = \"password\"\n              id=\"password\"\n              type=\"password\"\n              value={data.password || ''}\n              onChange={handleChange} />\n            <span className=\"popup__error\" id=\"password-error\"/>\n        </Form>\n      </div>\n    </div>\n  )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}