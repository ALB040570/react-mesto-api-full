{"ast":null,"code":"var _jsxFileName = \"/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm.js';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const avatarRef = useRef(); // записываем объект, возвращаемый хуком, в переменную\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n      /* Значение инпута, полученное с помощью рефа */\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    id: \"updata\",\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0434\\u043B\\u044F \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n        required: true,\n        className: \"popup__input popup__input_type_description\",\n        name: \"photo-link\",\n        id: \"link\",\n        type: \"url\",\n        ref: avatarRef // onChange={handleChange} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error\",\n        id: \"link-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"b0gZHFb7yLAqG8iuppUU+uG535s=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["PopupWithForm","useRef","EditAvatarPopup","props","avatarRef","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","current","value","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,SAAQC,MAAR,QAAqB,OAArB;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,SAAS,GAAGH,MAAM,EAAxB,CAD8B,CACF;;AAC5B,QAAMI,YAAY,GAAEC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,KAAK,CAACK,cAAN,CAAqB;AACnBC,MAAAA,MAAM,EAAEL,SAAS,CAACM,OAAV,CAAkBC;AAAK;;AADZ,KAArB;AAGD,GALD;;AAOA,sBACE,QAAC,aAAD;AAAe,IAAA,EAAE,EAAC,QAAlB;AACI,IAAA,IAAI,EAAG,QADX;AAEI,IAAA,KAAK,EAAG,uFAFZ;AAGI,IAAA,MAAM,EAAIR,KAAK,CAACS,MAHpB;AAII,IAAA,OAAO,EAAIT,KAAK,CAACU,OAJrB;AAKI,IAAA,QAAQ,EAAIR,YALhB;AAMI,IAAA,QAAQ,eACR;AAAA,8BACA;AACI,QAAA,WAAW,EAAC,0GADhB;AAEI,QAAA,QAAQ,MAFZ;AAEa,QAAA,SAAS,EAAC,4CAFvB;AAGI,QAAA,IAAI,EAAG,YAHX;AAII,QAAA,EAAE,EAAC,MAJP;AAKI,QAAA,IAAI,EAAC,KALT;AAMI,QAAA,GAAG,EAAED,SANT,CAOI;;AAPJ;AAAA;AAAA;AAAA;AAAA,cADA,eAUA;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9BQF,e;;KAAAA,e;AA+BT,eAAeA,eAAf","sourcesContent":["import PopupWithForm from './PopupWithForm.js';\nimport {useRef} from 'react';\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = useRef(); // записываем объект, возвращаемый хуком, в переменную\n  const handleSubmit=(e)=> {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value/* Значение инпута, полученное с помощью рефа */,\n    });\n  } \n\n  return(\n    <PopupWithForm id=\"updata\"\n        name = \"avatar\"\n        title = \"Обновить аватар\"\n        isOpen = {props.isOpen}\n        onClose = {props.onClose}\n        onSubmit = {handleSubmit}\n        children = {\n        <>\n        <input \n            placeholder=\"Ссылка для картинки\" \n            required className=\"popup__input popup__input_type_description\" \n            name = \"photo-link\" \n            id=\"link\" \n            type=\"url\"\n            ref={avatarRef}\n            // onChange={handleChange} \n        />\n        <span className=\"popup__error\" id=\"link-error\"/></>}\n    />\n  )\n}\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}