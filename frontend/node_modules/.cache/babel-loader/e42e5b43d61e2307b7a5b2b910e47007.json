{"ast":null,"code":"var _jsxFileName = \"/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const currentUser = useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  console.debug(props.card.owner);\n  const isOwn = false; //props.card.owner._id === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__trash ${isOwn ? 'element__trash_visible' : 'element__trash_hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked && 'element__like_active'}`;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__bord\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.card.link,\n        alt: props.card.name,\n        className: \"element__photo\",\n        onClick: () => props.onCardClick(props.card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"element__title\",\n      children: props.card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__like-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: cardLikeButtonClassName,\n        onClick: () => props.onCardLike(props.card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"element__like-counter\",\n        children: props.card.likes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: cardDeleteButtonClassName,\n      onClick: () => props.onCardDelete(props.card)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/Card.js"],"names":["CurrentUserContext","useContext","Card","props","currentUser","console","debug","card","owner","isOwn","cardDeleteButtonClassName","isLiked","likes","some","i","_id","cardLikeButtonClassName","link","name","onCardClick","onCardLike","length","onCardDelete"],"mappings":";;;AAAA,SAAQA,kBAAR,QAAiC,gCAAjC;AACA,SAAQC,UAAR,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAMC,WAAW,GAAGH,UAAU,CAACD,kBAAD,CAA9B,CADiB,CAEjB;;AACAK,EAAAA,OAAO,CAACC,KAAR,CAAcH,KAAK,CAACI,IAAN,CAAWC,KAAzB;AACA,QAAMC,KAAK,GAAG,KAAd,CAJiB,CAIE;AAGnB;;AACA,QAAMC,yBAAyB,GAC1B,kBAAiBD,KAAK,GAAG,wBAAH,GAA8B,uBAAwB,EADjF,CARiB,CAWjB;;AAEA,QAAME,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUX,WAAW,CAACW,GAAjD,CAAhB,CAbiB,CAejB;;AACA,QAAMC,uBAAuB,GACxB,iBAAgBL,OAAO,IAAI,sBAAuB,EADvD;AAIA,sBACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAER,KAAK,CAACI,IAAN,CAAWU,IAArB;AAA2B,QAAA,GAAG,EAAEd,KAAK,CAACI,IAAN,CAAWW,IAA3C;AAAiD,QAAA,SAAS,EAAC,gBAA3D;AAA4E,QAAA,OAAO,EAAI,MAAIf,KAAK,CAACgB,WAAN,CAAkBhB,KAAK,CAACI,IAAxB;AAA3F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCJ,KAAK,CAACI,IAAN,CAAWW;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEF,uBAAjC;AAA0D,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACiB,UAAN,CAAiBjB,KAAK,CAACI,IAAvB;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCJ,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBS;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEX,yBAAjC;AAA4D,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACmB,YAAN,CAAmBnB,KAAK,CAACI,IAAzB;AAA3E;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjCQL,I;;KAAAA,I;AAkCT,eAAeA,IAAf","sourcesContent":["import {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport {useContext} from 'react';\n\nfunction Card(props) {\n    const currentUser = useContext(CurrentUserContext);\n    // Определяем, являемся ли мы владельцем текущей карточки\n    console.debug(props.card.owner);\n    const isOwn = false//props.card.owner._id === currentUser._id;\n\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `element__trash ${isOwn ? 'element__trash_visible' : 'element__trash_hidden'}`\n    );\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked && 'element__like_active'}`\n    );\n    \n    return (\n        <li className=\"element\">\n            <div className=\"element__bord\">\n                <img src={props.card.link} alt={props.card.name} className=\"element__photo\" onClick = {()=>props.onCardClick(props.card)}/>\n            </div>\n            <h2 className=\"element__title\">{props.card.name}</h2>\n            <div className=\"element__like-group\">\n                <button type=\"button\" className={cardLikeButtonClassName} onClick={() => props.onCardLike(props.card)}/>\n                <p className=\"element__like-counter\">{props.card.likes.length}</p>\n            </div>\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={() => props.onCardDelete(props.card)}/>\n         </li>\n         )\n}\nexport default Card;"]},"metadata":{},"sourceType":"module"}