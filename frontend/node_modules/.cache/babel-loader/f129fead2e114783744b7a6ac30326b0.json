{"ast":null,"code":"var _jsxFileName = \"/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Main from './Main.js';\nimport api from '../utils/api.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(null);\n  const [userData, setUserData] = useState({\n    email: ''\n  });\n  const history = useHistory();\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const [TypeInfo, setTypeInfo] = useState(null);\n  const [currentUser, setCurrenUser] = useState({\n    name: '',\n    about: '',\n    avatar: ''\n  });\n  const [isEditProfilePopupOpen, handleEditProfileClick] = useState(false);\n  const [isAddPlacePopupOpen, handleAddPlaceClick] = useState(false);\n  const [isEditAvatarPopupOpen, handleEditAvatarClick] = useState(false);\n  const [selectedCard, handleCardClick] = useState(null);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history]);\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n\n    if (!token) {\n      return;\n    }\n\n    api.setToken(token);\n    api.getCards().then(cardsFromSer => {\n      setCards(cardsFromSer.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n\n    if (!token) {\n      return;\n    }\n\n    api.setToken(token);\n    api.getUsersInfo().then(userInfo => {\n      setCurrenUser(userInfo);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const onSignOut = () => {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n  };\n\n  const onLogin = (email, password) => {\n    api.authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        setLoggedIn(true);\n        setInfoTooltipOpen(false);\n        setUserData({\n          email: email\n        });\n      }\n\n      if (data.statusCode === 400) {\n        setInfoTooltipOpen(true);\n        setTypeInfo('fail');\n        throw new Error('не передано одно из полей');\n      }\n    }).catch(err => {\n      console.log('пользователь с email не найден');\n      setInfoTooltipOpen(true);\n      setTypeInfo('fail');\n    });\n  };\n\n  const onRegister = (email, password) => {\n    api.register(email, password).then(res => {\n      if (res.statusCode !== 400) {\n        history.push('/sing-in');\n      } else {\n        throw new Error('Что-то пошло не так!');\n      }\n\n      console.debug(res);\n      setInfoTooltipOpen(true);\n      setTypeInfo('success');\n    }).catch(e => console.log());\n  };\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      api.getContent(jwt).then(res => {\n        if (res) {\n          setUserData({\n            email: res.data.email\n          });\n          setLoggedIn(true);\n        }\n      }).catch(e => console.error(e));\n    } else {\n      setLoggedIn(false);\n    }\n  }, []);\n\n  if (loggedIn === null) {\n    return 'Загрузка...';\n  } //ставит или удаляет лайки\n\n\n  const handleCardLike = card => {\n    //  проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //handleCardDelete удаляет карточку\n\n\n  const handleCardDelete = card => {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.filter((c, i, cards) => c._id !== card._id ? newCard : false); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function closeAllPopups() {\n    handleEditProfileClick(false);\n    handleAddPlaceClick(false);\n    handleEditAvatarClick(false);\n    handleCardClick(null);\n    setInfoTooltipOpen(false);\n  }\n\n  const handleUpdateUser = data => {\n    const userInfoFromForm = api.patchUsersInfo(data);\n    userInfoFromForm.then(userInfo => {\n      setCurrenUser(userInfo);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleUpdateAvatar = data => {\n    const avatarFromForm = api.patchAvatar(data);\n    avatarFromForm.then(userInfo => {\n      setCurrenUser(userInfo);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleAddPlaceSubmit = data => {\n    const cardFromForm = api.postCard(data);\n    cardFromForm.then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        loggedIn: loggedIn,\n        userEmail: userData.email,\n        component: Main,\n        onSignOut: onSignOut,\n        onEditProfile: () => {\n          handleEditProfileClick(true);\n        },\n        onAddPlace: () => {\n          handleAddPlaceClick(true);\n        },\n        onEditAvatar: () => {\n          handleEditAvatarClick(true);\n        },\n        onCardClick: selectedCard => handleCardClick(selectedCard),\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: onLogin,\n          data: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        children: /*#__PURE__*/_jsxDEV(Register, {\n          onRegister: onRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateCards: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      isOpen: isInfoTooltipOpen,\n      TypeInfo: TypeInfo,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nxm08fQnqfAw5tx8xY8gWuoyQhY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lazzat/Documents/2021 yandex/dev2021/react-mesto-api-full/react-mesto-api-full/frontend/src/components/App.js"],"names":["Main","api","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","InfoTooltip","useState","useEffect","Route","Switch","Redirect","useHistory","CurrentUserContext","ProtectedRoute","App","loggedIn","setLoggedIn","userData","setUserData","email","history","isInfoTooltipOpen","setInfoTooltipOpen","TypeInfo","setTypeInfo","currentUser","setCurrenUser","name","about","avatar","isEditProfilePopupOpen","handleEditProfileClick","isAddPlacePopupOpen","handleAddPlaceClick","isEditAvatarPopupOpen","handleEditAvatarClick","selectedCard","handleCardClick","cards","setCards","push","token","localStorage","getItem","setToken","getCards","then","cardsFromSer","data","catch","err","console","log","getUsersInfo","userInfo","onSignOut","removeItem","onLogin","password","authorize","setItem","statusCode","Error","onRegister","register","res","debug","e","jwt","getContent","error","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","closeAllPopups","handleUpdateUser","userInfoFromForm","patchUsersInfo","handleUpdateAvatar","avatarFromForm","patchAvatar","handleAddPlaceSubmit","cardFromForm","postCard"],"mappings":"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","sourcesContent":["import Main from './Main.js';\nimport api from '../utils/api.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport {useState, useEffect} from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(null);\n  const [userData,setUserData] = useState({\n    email: ''\n    });\n  const history = useHistory();\n  const[isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const[TypeInfo, setTypeInfo] = useState(null);\n  const[currentUser, setCurrenUser]=useState({name: '', about: '', avatar: ''});\n  const[isEditProfilePopupOpen,handleEditProfileClick] = useState(false);\n  const[isAddPlacePopupOpen,handleAddPlaceClick] = useState(false);\n  const[isEditAvatarPopupOpen,handleEditAvatarClick] = useState(false);\n  const[selectedCard,handleCardClick]=useState(null);\n  const[cards, setCards]=useState([]);\n\n\n  useEffect(()=>{\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history])\n\n\n  useEffect(()=>{\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      return\n    }\n    api.setToken(token)\n    api\n      .getCards()\n      .then((cardsFromSer) => {\n        \n        setCards(cardsFromSer.data);\n        \n      })\n      .catch((err) => {console.log(err);});\n    },[]);\n\n  useEffect(()=>{\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      return\n    }\n    api.setToken(token)\n    api.getUsersInfo()\n    .then((userInfo) => {\n      setCurrenUser(userInfo);\n      })\n    .catch((err) => {console.log(err);});\n  },[]);\n\n  const onSignOut =() => {\n\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n  }\n\n  const onLogin = (email, password) => {\n    api\n      .authorize(email, password)\n      .then((data) => {\n        if (data.token){\n          localStorage.setItem('jwt', data.token);\n          setLoggedIn(true);\n          setInfoTooltipOpen(false);\n          setUserData({email: email})\n        }\n        if (data.statusCode===400){\n          setInfoTooltipOpen(true);\n          setTypeInfo('fail');\n          throw new Error ('не передано одно из полей');\n        }\n      })\n      .catch((err) => {\n        console.log('пользователь с email не найден');\n        setInfoTooltipOpen(true);\n        setTypeInfo('fail');\n      });\n  }\n\n  const onRegister = (email, password) =>{\n    api\n      .register(email, password).then((res) => {\n        if (res.statusCode !== 400) {\n          history.push('/sing-in');\n        }else {\n          throw new Error ('Что-то пошло не так!');\n        }\n        console.debug(res);\n        setInfoTooltipOpen(true);\n        setTypeInfo('success');\n      })\n      .catch((e) => console.log());\n  }\n  useEffect(()=>{\n\n      const jwt = localStorage.getItem('jwt');\n      if (jwt){\n        api\n          .getContent(jwt)\n          .then((res) => {\n\n            if (res){\n              setUserData({\n                email: res.data.email\n              })\n              setLoggedIn(true);\n            }\n          })\n          .catch (e=>console.error(e))\n        } else {\n          setLoggedIn(false);\n        }\n\n  },[])\n\n\n\n\n\n  if (loggedIn===null) {\n    return 'Загрузка...'\n  }\n\n\n    //ставит или удаляет лайки\n  const handleCardLike=(card) =>{\n    //  проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n    // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {console.log(err);});\n  }\n\n  //handleCardDelete удаляет карточку\n  const handleCardDelete=(card) =>{\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id).then((newCard) => {\n    // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n    const newCards = cards.filter((c,i,cards) => c._id !== card._id ? newCard : false);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {console.log(err);});\n  }\n\n\n\n\n  function closeAllPopups() {\n    handleEditProfileClick(false);\n    handleAddPlaceClick(false);\n    handleEditAvatarClick(false);\n    handleCardClick(null);\n    setInfoTooltipOpen(false);\n  }\n\n  const handleUpdateUser=(data)=> {\n    const userInfoFromForm = api.patchUsersInfo(data);\n    userInfoFromForm\n    .then((userInfo) => {\n      setCurrenUser(userInfo);\n      closeAllPopups();\n      })\n    .catch((err) => {console.log(err);});\n\n  }\n\n  const handleUpdateAvatar=(data)=> {\n    const avatarFromForm = api.patchAvatar(data);\n    avatarFromForm\n    .then((userInfo) => {\n      setCurrenUser(userInfo);\n      closeAllPopups();\n      })\n    .catch((err) => {console.log(err);});\n\n  }\n\n  const handleAddPlaceSubmit=(data)=> {\n    const cardFromForm = api.postCard(data);\n    cardFromForm\n    .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n    .catch((err) => {console.log(err);});\n\n  }\n\n  return (\n\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n        <ProtectedRoute exact path=\"/\"\n          loggedIn={loggedIn}\n          userEmail={userData.email}\n          component={Main}\n          onSignOut={onSignOut}\n          onEditProfile={()=>{handleEditProfileClick(true)}}\n          onAddPlace={()=>{handleAddPlaceClick(true)}}\n          onEditAvatar={()=>{handleEditAvatarClick(true)}}\n          onCardClick={selectedCard=>handleCardClick(selectedCard)}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          />\n\n        <Route path=\"/sign-in\">\n          <Login  onLogin={onLogin}\n          data={userData}\n          />\n\n        </Route>\n\n        <Route path=\"/sign-up\">\n          <Register onRegister = {onRegister}/>\n        </Route>\n\n        <Route>\n          {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n        </Route>\n\n      </Switch>\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateCards={handleAddPlaceSubmit}\n        />\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n      <InfoTooltip\n        isOpen={isInfoTooltipOpen}\n        TypeInfo={TypeInfo}\n        onClose={closeAllPopups}\n        />\n\n\n\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}